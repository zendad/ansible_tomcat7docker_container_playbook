---

- name: Ensure that APT works with the https method
  apt: name={{ item }} state=present
  with_items:
    - apt-transport-https
    - ca-certificates

- name: Install docker GPG key
  apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D state=present
  tags:
    - docker
    - gpg_key

- name: Add docker apt repository
  apt_repository: repo="deb https://apt.dockerproject.org/repo {{ ansible_distribution|lower }}-{{ ansible_distribution_release }} main" state=present
  tags:
    - docker
    - apt_repository

- name: Update apt-cache
  apt: update_cache=yes
  tags:
    - docker
    - apt_cache

- name: Purge the old repo if it exists
  apt: name={{ item }} purge=yes
  with_items:
    - "lxc-docker*"
    - "docker.io*"
  ignore_errors: yes
  tags:
    - docker
    - apt_purge

- name: Install python-pip
  apt: name=python-pip state=present


- name: Install docker package
  apt: name=docker-engine state=present
  notify: Start Docker
  tags:
    - docker
    - install

- name: Install docker-compose
  get_url:
    url:   "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}"
    dest:  /usr/local/bin/docker-compose
    owner: root
    group: root
    mode:  0755

- name: Install docker api client
  pip: name=docker-py version={{ docker_api_version }} state=present
  when: docker_api_install or docker_compose_version_major_minor|float <= 1.10

- name: Add users to docker group
  user: name={{ item }} groups=docker append=yes createhome=no
  with_items: "{{ docker_allow_users }}"
